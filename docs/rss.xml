<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Leni的博客</title><link>https://Lenijigen0718.github.io</link><description>小菜鸟，求进步</description><copyright>Leni的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://Lenijigen0718.github.io</link></image><lastBuildDate>Thu, 16 Oct 2025 12:32:04 +0000</lastBuildDate><managingEditor>Leni的博客</managingEditor><ttl>60</ttl><webMaster>Leni的博客</webMaster><item><title>关于协程的进一步理解</title><link>https://Lenijigen0718.github.io/post/guan-yu-xie-cheng-de-jin-yi-bu-li-jie.html</link><description>### 协程的基本原理
协程**本质就是一个状态机**，内部通过MoveNext()方法进行执行，并通过一个state状态标识来区分当前应该执行哪个部分，同时Current代表当前执行的部分的返回值。</description><guid isPermaLink="true">https://Lenijigen0718.github.io/post/guan-yu-xie-cheng-de-jin-yi-bu-li-jie.html</guid><pubDate>Thu, 16 Oct 2025 12:29:12 +0000</pubDate></item><item><title>Addressable+HybridCLR热更新工作流程和一些注意</title><link>https://Lenijigen0718.github.io/post/Addressable%2BHybridCLR-re-geng-xin-gong-zuo-liu-cheng-he-yi-xie-zhu-yi.html</link><description>1. 导入Addressable包，导入HybridCLR包并进行相关初始化
2. Addressable相关设置：
	* 需要热更的资源，打包与加载需要设置为远端，否则不起作用
	* 相关设置中，需要勾选Build Remote Catalog。</description><guid isPermaLink="true">https://Lenijigen0718.github.io/post/Addressable%2BHybridCLR-re-geng-xin-gong-zuo-liu-cheng-he-yi-xie-zhu-yi.html</guid><pubDate>Sun, 14 Sep 2025 13:41:43 +0000</pubDate></item><item><title>Addressable+HbridCLR实现热更新踩坑!!!</title><link>https://Lenijigen0718.github.io/post/Addressable%2BHbridCLR-shi-xian-re-geng-xin-cai-keng-%21%21%21.html</link><description>#### 时间：2025年9月14日
HybridCLR**已经将加载元数据这一步进行了简化**，在热更新时，**只需要对HotUpdate.dll文件进行管理、使用时只加载HotUpdate.dll文件**即可。</description><guid isPermaLink="true">https://Lenijigen0718.github.io/post/Addressable%2BHbridCLR-shi-xian-re-geng-xin-cai-keng-%21%21%21.html</guid><pubDate>Sun, 14 Sep 2025 13:17:38 +0000</pubDate></item><item><title>Addressable进行热更新时踩坑经历</title><link>https://Lenijigen0718.github.io/post/Addressable-jin-xing-re-geng-xin-shi-cai-keng-jing-li.html</link><description>#### 进行目录检查更新时没有效果
##### 场景
使用 **Addressables.CheckForCatalogUpdates()** 进行目录更新，得到结果，根据结果判断是否需要下载资源
##### 使用代码如下
``` C#
IEnumerator CheckUpdate()
    {
        //检查是否有更新
        AsyncOperationHandle&lt;List&lt;string&gt;&gt; catalogHandle = Addressables.CheckForCatalogUpdates();
        yield return catalogHandle;

        if (catalogHandle.Status == AsyncOperationStatus.Succeeded)
        {
            if (catalogHandle.Result.Count &gt; 0)
            {
                //直接进行资源更新
            }
        }
        else
        {
            Debug.LogError('目录检查更新失败');
            Addressables.Release(catalogHandle);
        }
    }
```
##### 出现问题
代码始终无法进入到资源更新部分，也就是说，这里的目录检查更新的结果始终为最新版本。</description><guid isPermaLink="true">https://Lenijigen0718.github.io/post/Addressable-jin-xing-re-geng-xin-shi-cai-keng-jing-li.html</guid><pubDate>Sun, 14 Sep 2025 08:22:36 +0000</pubDate></item></channel></rss>